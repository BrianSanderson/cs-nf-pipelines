// Copyright Jackson Laboratory 2021

// Config file that won't be edited by individual users and will remain constant; contains parameters such as containers to use/walltime/memory

//====================  Nextflow/Container Config  ==========

manifest {
    name = "Whole_Exome"
    description = 'Pipeline for processing of whole exome samples; default is paired end reads and GATK4.'
    author = 'Anuj Srivastava, Carolyn Paisie, Copyright Jackson Laboratory 2021'
    mainScript = "Whole_Exome.nf"
    version = "1.0.0"
}

params.outdir = params.outdir ?: "${manifest.name}_results"

params {
  filter_trim = '/projects/compsci/nextflow/bin/filter_trim.py'
  read_grp_det = '/projects/compsci/nextflow/bin/read_group_from_fastq.py'
}


process {
  withLabel:vshort_mem {
    cpus = 1
    time = '00:30:00'
    clusterOptions = '-q batch'
  }
  withLabel:short_mem {
    cpus = 1
    time = '04:00:00'
    clusterOptions = '-q batch'
  }
  withLabel:short_med_mem {
    cpus = 1
    memory = 6.GB
    time = '06:00:00'
    clusterOptions = '-q batch'
  }
  withLabel:med_mem {
    cpus = 1
    time = '08:00:00'
    clusterOptions = '-q batch'
  }
  withLabel:med_high_mem {
    cpus = 8
    memory = 10.GB
    time = '08:00:00'
    clusterOptions = '-q batch'
  } 
  withLabel:long_mem {
    cpus = 1
    time = '36:00:00'
    clusterOptions = '-q batch'
  }
  withLabel:long_high_mem {
    cpus = 12
    memory = 35.GB
    time = '72:00:00'
    clusterOptions = '-q batch'
  }
  withLabel:variant_calling_mem {
    cpus = 8
    memory = 15.GB
    time = '23:00:00'
    clusterOptions = '-q batch'
  }
  withLabel:trans_mem {
    cpus = 1
    time = '00:05:00'
    clusterOptions = '-q batch'
  }

}


process {
  withLabel: python                       { container = "/projects/compsci/nextflow/containers/python_2.7.3.sif" }
  withLabel: bwa                          { container = "/projects/compsci/nextflow/containers/bwa-0.7.9a_python_2.7.3.sif" }
  withLabel: picard_1_95                  { container = "/projects/compsci/nextflow/containers/picard-1.95.sif" }
  withLabel: picard_2_8_1                 { container = "/projects/compsci/nextflow/containers/picard_2.8.1.sif" }
  withLabel: gatk3                        { container = "/projects/compsci/nextflow/containers/gatk-3.6_snpeff-3.6c_samtools-1.3.1_bcftools-1.11.sif" }
  withLabel: gatk4                        { container = "/projects/compsci/nextflow/containers/gatk-4.1.6.0_samtools-1.3.1_snpEff_4.3_vcftools_bcftools.sif" }
  withLabel: annotation                   { container = "/projects/compsci/nextflow/containers/vcftools_0.1.15.sif" }
  withLabel: variant_annotation_snpeff    { container = "/projects/compsci/nextflow/containers/snpeff-3.6c.sif" }
}

env {
    NXF_ANSI_SUMMARY = true
    NXF_ANSI_LOG = true
    NXF_DEBUG = 2
}


report {
    enabled = true // false
    file = "${params.outdir}/report.html"
}

trace {
    enabled = true // false
    file = "${params.outdir}/trace.txt"
    fields = \
         "task_id,"   \
       + "hash,"      \
       + "process,"   \
       + "tag,"       \
       + "status,"    \
       + "exit,"      \
       + "start,"     \
       + "container," \
       + "cpus,"      \
       + "time,"      \
       + "disk,"      \
       + "memory,"    \
       + "duration,"  \
       + "realtime,"  \
       + "queue,"     \
       + "%cpu,"      \
       + "%mem,"      \
       + "rss,"       \
       + "vmem,"      \
       + "rchar,"     \
       + "wchar"
}

profiles {
 slurm {
  process.executor = "slurm"
  process.queue = "compute"
  process.clusterOptions = '-q batch'
  process.module = "slurm"
  }
 singularity {
  process.module = 'singularity'
  singularity.enabled = true
  singularity.autoMounts = true
  }

}

executor {
    $slurm {
        submitRateLimit = '1 / 2 s'
    }
}

/*
#!/bin/bash
#Old bash script to make config
# Sample command to run script to make config files and launch pipeline:
# sbatch make_mm10_config_run_WholeExome_PE.sh /projects/compsci/USERS/paisic/mmu_fastq_WES /projects/compsci/USERS/paisic/mm10_W$


#IMPORTANT: snpEff.config needs to be in directory one level above data directory containing snpEff database files!!!!


CONFIG_FILE=mm10_params.config  # name of the config file
FQ_PATH="."                     # path to the fastq directory
OUTDIR="."                      # output directory
TMPDIR="."                      # directory for temporary files
MIN_PCT_HQ_READS='50'           # minimum % high quality reads
READS='PE'                      # type of sequencing reads; paired end

if [ $# -eq 0 ]; then
    Useage: $0 fastq_dir [ outdir [tmpdir [min_pct_hq_reads [reads ]]]]"
    defaults: $0 . . 50 PE"
    exit 1
fi

FQ_PATH=$1
if [ $# -gt 1 ]; then
    OUTDIR=$2
fi
if [ $# -gt 2 ]; then
    TMPDIR=$3
fi
if [ $# -gt 3 ]; then
    MIN_PCT_HQ_READS=$4
fi
if [ $# -gt 4 ]; then
    READS=$5
fi


FILE_LIST_R1=`ls ${FQ_PATH}/*_R1*.fastq.gz > r1.txt`
FILE_LIST_R2=`ls ${FQ_PATH}/*_R2*.fastq.gz > r2.txt`

n=`cat r1.txt | wc -l`

for ((i=1; i<=n; i++))

  do

    R1=$(head -n $i r1.txt | tail -n 1)
    R2=$(head -n $i r2.txt | tail -n 1)
    base=$(basename $R1 .fastq.gz)

    echo "// $CONFIG_FILE : `date`
    params
    {                                                                                                                            $
        _fqPath=\""${FQ_PATH}"\"
        fastqInputs = \"${R1}"",""${R2}"\""
        outdir = \"${OUTDIR}\"
        tmpdir = \"${TMPDIR}\"
        min_pct_hq_reads = \"${MIN_PCT_HQ_READS}\"                                                                               $
        reads = \"${READS}\"
        gen_org = \"mouse\"                                                                                                      $
        ref_fa_bwa = '/projects/compsci/refdata/Mouse/mm10/Index_Files/BWA/mm10.fa'                                              $
        ref_fa = '/projects/compsci/refdata/Mouse/mm10/Index_Files/BWA/mm10.fa'
        dbSNP = '/projects/compsci/refdata/Mouse/mm10/Annotation_Files/dbSNP/dbSNP.mm10.tab.gz'                                  $
        target_gatk = '/projects/compsci/refdata/Mouse/mm10/mm10Exome_v4_12-19.1.mm10.baits_merged.bed'
        target_picard = '/projects/compsci/refdata/Mouse/mm10/mm10Exome_v4_12-19.1.mm10.targets_merged_picard_new.bed'		 $
        bait_picard = '/projects/compsci/refdata/Mouse/mm10/mm10Exome_v4_12-19.1.mm10.baits_merged_picard_new.bed'		 $
        snpEff_config = '/projects/compsci/refdata/Mouse/mm10/snpEff_files/snpEff.config'                                        $
        stats_agg = '/projects/compsci/nextflow/bin/aggregate_stats.py'
        mismatch_penalty = \"-B 8\"                                                                                              $
        call_val = \"50.0\"                                                                                                      $
        ploidy_val = \"\"                                                                                                        $
    }"                                                                                   > ${base}_${CONFIG_FILE}

  done


for ((i=1; i<=n; i++))

  do

    R1=$(head -n $i r1.txt | tail -n 1)
    base=$(basename $R1 .fastq.gz)
    sbatch --export=ALL,pc_name=$base ./run_mm10_WholeExome.sh

  done



*/
