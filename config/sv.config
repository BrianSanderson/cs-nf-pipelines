//====================  Nextflow/Container Config  ==========

manifest {
    name = "nygc_sv"
    description = 'Pipeline for processing of matched tumor normal samples for SV, and variant calling.'
    author = ', Copyright Jackson Laboratory 2021'
}

params {
    //Shared params
    gen_org='human' // ONLY ONE OPTION HERE
    extension='.fastq.gz'
    pattern="*_R{1,2}*"
    read_type = 'PE' // SE
    concat_lanes = false
 
    // Quality Stats params
    min_pct_hq_reads = '0.0'

    // Reference fasta
    params.ref_fa = '/projects/omics_share/meta/benchmarking/testing/inputs/GRCh38_index/GRCh38_full_analysis_set_plus_decoy_hla.fa'
    params.ref_fa_indices = '/projects/omics_share/meta/benchmarking/testing/inputs/GRCh38_index/GRCh38_full_analysis_set_plus_decoy_hla.fa'
    
    // BWA params
    params.mismatch_penalty = "-B 8"

    // Known Sites for BQSR
    params.gold_std_indels = '/projects/omics_share/human/GRCh38/genome/annotation/snps_indels/Mills_and_1000G_gold_standard.indels.hg38.vcf.gz'
    params.phase1_1000G = '/projects/omics_share/human/GRCh38/genome/annotation/snps_indels/1000G_phase1.snps.high_confidence.hg38.vcf.gz'
    params.dbSNP = '/projects/omics_share/human/GRCh38/genome/annotation/snps_indels/dbsnp_151.vcf.gz'

    chrom_contigs = '/projects/omics_share/human/GRCh38/genome/sequence/gatk/Homo_sapiens_assembly38.primaryChr.contig_list'
    chrom_intervals = '/projects/omics_share/human/GRCh38/genome/annotation/intervals/hg38_calling_intervals/'
    lancet_beds_directory = '/projects/omics_share/human/GRCh38/genome/annotation/intervals/lancet_chr_beds/'
    mappability_directory = '/projects/compsci/omics_share/meta/benchmarking/testing/inputs/mappability/'


    excludeIntervalList = '/projects/compsci/omics_share/meta/benchmarking/testing/inputs/hg38_haplotypeCaller_skip.interval_list'

    ref_fa_dict = '/projects/omics_share/human/GRCh38/genome/sequence/gatk/Homo_sapiens_assembly38.dict'

    call_val = 50.0
    
    ploidy_val = "-ploidy 2" // Need to revisit why we are using the param in this way. Could just be '2' and '-ploidy' would go into the module. 

    hapmap = '/projects/compsci/omics_share/meta/benchmarking/testing/inputs/hapmap_3.3.hg38.vcf.gz'
    omni = '/projects/compsci/omics_share/meta/benchmarking/testing/inputs/1000G_omni2.5.hg38.vcf.gz'
    onekG = '/projects/compsci/omics_share/meta/benchmarking/testing/inputs/1000G_phase1.snps.high_confidence.hg38.vcf.gz'
    dbsnp = '/projects/compsci/omics_share/meta/benchmarking/testing/inputs/Homo_sapiens_assembly38.dbsnp138.vcf'

    callRegions = '/projects/omics_share/meta/benchmarking/testing/inputs/GRCh38.callregions.bed.gz'

    strelka_config = '/projects/omics_share/meta/benchmarking/testing/inputs/configureStrelkaSomaticWorkflow.py.ini'

    gridss_pon = '/projects/omics_share/meta/benchmarking/testing/inputs/pon.grch38.tar.gz'
    gridss_somatic_filter_ref = 'BSgenome.Hsapiens.UCSC.hg38'
    
    bicseq2_chromList = '/projects/omics_share/meta/benchmarking/testing/inputs/sampleId.bicseq2.config'

    dbsnpIndels = '/projects/omics_share/meta/benchmarking/testing/inputs/dbsnp_146.indels.hg38.vcf'

    vep_cache_directory = '/projects/compsci/omics_share/meta/benchmarking/testing/inputs/vep'
    vep_fasta = '/projects/compsci/omics_share/human/GRCh38/genome/sequence/ensembl/v108/Homo_sapiens.GRCh38.dna.primary_assembly.fa'

    cosmic = '/projects/compsci/omics_share/meta/benchmarking/testing/inputs/cancer_gene_census.csv'

    cosmic_cancer_resistance_muts = '/projects/compsci/omics_share/meta/benchmarking/testing/inputs/CosmicResistanceMutations.tsv.gz'

    msisensor_model='/projects/compsci/omics_share/meta/benchmarking/testing/inputs/msisensor2/models_hg38'

    ensembl_entrez='/projects/compsci/omics_share/meta/benchmarking/testing/inputs/homo_sapiens_ensembl_gene_id_entrez_id_map.csv'
    intervalListBed='/projects/compsci/omics_share/meta/benchmarking/testing/inputs/SureSelect_V6plusCOSMIC.target.GRCh38_full_analysis_set_plus_decoy_hla.interval_list.bed'

    pon_bed = '/projects/compsci/omics_share/meta/benchmarking/testing/inputs/WGS_1000g_GRCh38.pon.bed'

    germline_filtering_vcf = '/projects/compsci/omics_share/meta/benchmarking/testing/inputs/gnomad-and-ALL_GRCh38_sites.20170504.normalized.modified.PASS.vcf.gz'

    cytoband = '/projects/omics_share/meta/benchmarking/testing/inputs/GRCh38.cytoBand.UCSC.chr.sorted.txt'
    dgv = '/projects/omics_share/meta/benchmarking/testing/inputs/DGV.GRCh38_hg38_variants_2020-02-25.bed'
    thousandG = '/projects/omics_share/meta/benchmarking/testing/inputs/1KGP.CNV.GRCh38.canvas.merged.bed'
    cosmicUniqueBed = '/projects/omics_share/meta/benchmarking/testing/inputs/CosmicCompleteCNA.GRch38.bed'
    cancerCensusBed = '/projects/omics_share/meta/benchmarking/testing/inputs/cancer_gene_census.GRCh38-v92.bed'
    ensemblUniqueBed = '/projects/omics_share/meta/benchmarking/testing/inputs/ensembl_genes_unique_sorted.final.v93.chr.sorted.bed'
    gap = '/projects/omics_share/meta/benchmarking/testing/inputs/GRCh38.gap.UCSC.annotated.chr.sorted.bed'
    dgvBedPe = '/projects/omics_share/meta/benchmarking/testing/inputs/DGV.GRCh38_hg38_variants_2020-02-25.bedpe'
    thousandGVcf = '/projects/omics_share/meta/benchmarking/testing/inputs/1KGP.pruned_wAFs.PASS_and_MULTIALLELIC_Mosaic.GRCh38.vcf'
    svPon = '/projects/omics_share/meta/benchmarking/testing/inputs/1000G-SV-PON.survivor-merged.GRCh38.filtered.bedpe'
    cosmicBedPe = '/projects/omics_share/meta/benchmarking/testing/inputs/cosmic-sv-GRCh38-v92.bedpe'
    cosmicSigs = '/projects/omics_share/meta/benchmarking/testing/inputs/signatures.genome.cosmic.v3.2.march2021.grch38.rda'

    tmpdir = ''
    sample_folder = ''
}